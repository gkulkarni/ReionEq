#!/usr/bin/python

# Cre: 01-2013
# Mod: $Date$ ($Revision$)

# Reads in Pop II and Pop III samples produced by sample_ns.f90, adds
# a Gaussian error of 0.1 dex to each data points, and runs a KS test
# with the null hypothesis that the sample was generated by Pop II. 

import sys 
from scipy import stats 
from scipy.stats import ks_2samp 
import numpy as np 
import random

p3_samp_file = open("sample2_p3.dat","r")
p3_samp_data = p3_samp_file.readlines()
p3_samp = [float(x) for x in p3_samp_data]
p3_samp_file.close()

p2_samp_file = open("sample2_p2.dat","r")
p2_samp_data = p2_samp_file.readlines()
p2_samp = [float(x) for x in p2_samp_data]
p2_samp_file.close()

#stats = ks_2samp(p3_samp, p2_samp)
#print stats

noisy_p3_samp = []
for x in p3_samp:
    noise = random.gauss(0.0,0.1)
    noisy_p3_samp.append(x+noise) 

#noisy_p2_samp = []
#for x in p2_samp:
#    noise = random.gauss(0.0,0.05)
#    noisy_p2_samp.append(x+noise) 
    
#stats = ks_2samp(noisy_p3_samp, noisy_p2_samp)
#print stats

#p3_samp_outfile = open("noisy_sample_p3.dat","w")
#p2_samp_outfile = open("noisy_sample_p2.dat","w")
#for x in noisy_p3_samp: 
#    p3_samp_outfile.write(str(x)+"\n")
#p3_samp_outfile.close()
#for x in noisy_p2_samp: 
#    p2_samp_outfile.write(str(x)+"\n")
#p2_samp_outfile.close()

stats = ks_2samp(noisy_p3_samp, p2_samp)
print stats[0], stats[1]

